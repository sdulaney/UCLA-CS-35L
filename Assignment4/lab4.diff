2019-10-29  Stewart P Dulaney  <stewart@lnxsrv07.seas.ucla.edu>

	* timespec.h (timespec_cmp): An overflow was identified when subtracting a large negative number from a large positive number caused the result to wrap around the maximum of a signed 32 bit
	int. This fixes the problem by using comparisons instead of subtraction to return negative, zero, positive if A < B, A == B, A > B, respectively.

--- coreutils-with-bug-original/coreutils-with-bug/lib/timespec.h	2005-09-21 23:05:39.000000000 -0700
+++ coreutils-with-bug/lib/timespec.h	2019-10-29 13:44:24.457153000 -0700
@@ -45,8 +45,19 @@
 static inline int
 timespec_cmp (struct timespec a, struct timespec b)
 {
-  int diff = a.tv_sec - b.tv_sec;
-  return diff ? diff : a.tv_nsec - b.tv_nsec;
+  if (a.tv_sec < b.tv_sec)
+    return -1;
+  else if (a.tv_sec > b.tv_sec)
+    return 1;
+  else
+    {
+      if (a.tv_nsec < b.tv_nsec)
+	return -1;
+      else if (a.tv_nsec > b.tv_nsec)
+	return 1;
+      else
+	return 0;
+    }
 }
 
 # if ! HAVE_DECL_NANOSLEEP
